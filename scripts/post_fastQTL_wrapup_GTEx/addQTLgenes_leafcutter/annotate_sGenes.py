import argparse as ap
import pandas as pd

parser = ap.ArgumentParser(description='Add sGenes to qtls.txt file using the pre-computed output from splicingQTL/scripts/pre_fastQTL/sGenes/map_clusters_to_sgenes.R')
#files = parser.add_argument_group('bedfile')
parser.add_argument('qtlsfile', metavar='qtlsfile', type=str, nargs=1, help='Path to qtls.txt file to add sGene annotation')
parser.add_argument('annotfile', metavar='annotfile', type=str, nargs=1, help='Path to cluster annotation file generated by map_clusters_to_sgenes.R')

args = parser.parse_args()
#args = parser.parse_args('/sc/arion/projects/EPIASD/splicingQTL/output/sqtls/minCovars+seqPC9/4genoPCs/0HCPs/qtls/qtls.txt /sc/arion/projects/EPIASD/splicingQTL/output/pheno_wasp/out-extra3-100kb-covar_clusters_ilen100kb_reads50_ratio0.01_perind.counts.clustids.gcv33ids /sc/arion/projects/EPIASD/splicingQTL/ext_data/other/gencode/hg19/v33lift37/gencode_v33_idmap.txt'.split(' '))

qtlsfile = args.qtlsfile[0]
annotfile = args.annotfile[0]

qtls = pd.read_csv(qtlsfile, sep='\t')
annot = pd.read_csv(annotfile, sep='\t')

# Construct clusterID join key
clusplit = qtls['pid'].str.split(':',expand=True)
qtls['clu'] = clusplit[0] + ':' + clusplit[3]
# Cluster annotation file has 'chr' preceding the cluster ids, so remove that here
annot['clu'] = annot.clu.str.replace('chr','')
# Set indices & L-join
print('---nrows qtls.txt before L-joining clusters: ' + str(qtls.shape[0]))
qtls.set_index('clu',inplace=True,drop=False,append=False)
annot.set_index('clu',inplace=True,drop=False,append=False,verify_integrity=True)
qtls['pid_ensg']=annot['genes']
print('---nrows qtls.txt after L-joining clusters: ' + str(qtls.shape[0]))
# Add gene symbols
qtls.to_csv(qtlsfile[:-4] + '+pid_ensg.txt', sep='\t', index=False)
